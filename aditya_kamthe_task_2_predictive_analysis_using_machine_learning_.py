# -*- coding: utf-8 -*-
"""Aditya Kamthe Task 2 PREDICTIVE ANALYSIS USING MACHINE LEARNING .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qqp_-lD2GS-8iao2H8NXsKTS2wHDsPrl
"""

pip install pandas scikit-learn matplotlib seaborn

import pandas as pd

df = pd.read_csv("/content/drive/MyDrive/task data set/Instagram data.csv", encoding="latin1")
df.head()

from sklearn.model_selection import train_test_split

# Drop text columns
df_clean = df.drop(columns=["Caption", "Hashtags"])

# Features and target
X = df_clean.drop(columns=["Follows"])
y = df_clean["Follows"]

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

import seaborn as sns
import matplotlib.pyplot as plt

# Correlation heatmap
plt.figure(figsize=(10, 8))
sns.heatmap(df_clean.corr(), annot=True, cmap="coolwarm")
plt.title("Feature Correlation Heatmap")
plt.show()

from sklearn.linear_model import LinearRegression

model = LinearRegression()
model.fit(X_train, y_train)

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score

rf = RandomForestRegressor(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)

rf_pred = rf.predict(X_test)

print("Random Forest RÂ²:", r2_score(y_test, rf_pred))

plt.scatter(y_test, rf_pred, alpha=0.7)
plt.xlabel("Actual Follows")
plt.ylabel("Predicted Follows")
plt.title("Actual vs Predicted Followers")
plt.show()